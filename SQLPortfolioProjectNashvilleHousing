--Cleaning Data in SQL


--Populate Property Adress Data
SELECT *
FROM SQLDataExploration.dbo.[Nashville Housing Data for Data Cleaning]
--WHERE PropertyAddress is NULL
ORDER BY ParcelID

SELECT a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress, b.PropertyAddress)
FROM SQLDataExploration.dbo.[Nashville Housing Data for Data Cleaning] a
JOIN SQLDataExploration.dbo.[Nashville Housing Data for Data Cleaning] b
    ON a.ParcelID = b.ParcelID
    AND a.UniqueID <> b.UniqueID
    WHERE a.PropertyAddress is null

UPDATE a
SET PropertyAddress = ISNULL(a.PropertyAddress, b.PropertyAddress)
FROM SQLDataExploration.dbo.[Nashville Housing Data for Data Cleaning] a
JOIN SQLDataExploration.dbo.[Nashville Housing Data for Data Cleaning] b
    ON a.ParcelID = b.ParcelID
    AND a.UniqueID <> b.UniqueID
 WHERE a.PropertyAddress is null

 --Breaking Address down int individual columns (Address,City, State)
 SELECT PropertyAddress
FROM SQLDataExploration.dbo.[Nashville Housing Data for Data Cleaning]
--WHERE PropertyAddress is NULL
--ORDER BY ParcelID

SELECT 
SUBSTRING(PropertyAddress, 1, CHARINDEX(',',PropertyAddress) -1) AS Address
,SUBSTRING (PropertyAddress, CHARINDEX(',', PropertyAddress) +1, LEN(PropertyAddress)) AS Address
FROM SQLDataExploration.dbo.[Nashville Housing Data for Data Cleaning]

ALTER TABLE [Nashville Housing Data for Data Cleaning]
Add PropertySplitAddress Nvarchar(255);

Update [Nashville Housing Data for Data Cleaning]
SET PropertySplitAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',',PropertyAddress) -1)

ALTER TABLE [Nashville Housing Data for Data Cleaning]
Add PropertySplitCity Nvarchar(255);

Update [Nashville Housing Data for Data Cleaning]
SET PropertySplitCity = SUBSTRING (PropertyAddress, CHARINDEX(',', PropertyAddress) +1, LEN(PropertyAddress))

SELECT *
FROM SQLDataExploration.dbo.[Nashville Housing Data for Data Cleaning]


SELECT PropertyAddress
FROM SQLDataExploration.dbo.[Nashville Housing Data for Data Cleaning]

Select
PARSENAME(REPLACE(OwnerAddress, ',', '.') , 3)
,PARSENAME(REPLACE(OwnerAddress, ',', '.') , 2)
,PARSENAME(REPLACE(OwnerAddress, ',', '.') , 1)
From SQLDataExploration.dbo.[Nashville Housing Data for Data Cleaning]



ALTER TABLE [Nashville Housing Data for Data Cleaning]
Add OwnerSplitAddress Nvarchar(255);

Update [Nashville Housing Data for Data Cleaning]
SET OwnerSplitAddress = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 3)


ALTER TABLE [Nashville Housing Data for Data Cleaning]
Add OwnerSplitCity Nvarchar(255);

Update [Nashville Housing Data for Data Cleaning]
SET OwnerSplitCity = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 2)



ALTER TABLE [Nashville Housing Data for Data Cleaning]
Add OwnerSplitState Nvarchar(255);

Update [Nashville Housing Data for Data Cleaning]
SET OwnerSplitState = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 1)



Select *
From SQLDataExploration.dbo.[Nashville Housing Data for Data Cleaning]

--Change Y and N to Yes and No in 'Sold As Vacant' field

Select Distinct(SoldAsVacant), COUNT(SoldAsVacant)
From SQLDataExploration.dbo.[Nashville Housing Data for Data Cleaning]
GROUP BY SoldAsVacant
ORDER BY 2

Select SoldAsVacant
, CASE WHEN SoldAsVacant = 'Y' THEN 'Yes'
       WHEN SoldAsVacant = 'N' THEN 'No'
       ELSE SoldAsVacant
       END
From SQLDataExploration.dbo.[Nashville Housing Data for Data Cleaning]

UPDATE [Nashville Housing Data for Data Cleaning]
SET SoldAsVacant = CASE WHEN SoldAsVacant = 'Y' THEN 'Yes'
       WHEN SoldAsVacant = 'N' THEN 'No'
       ELSE SoldAsVacant
       END
From SQLDataExploration.dbo.[Nashville Housing Data for Data Cleaning]

--Remove Duplicates

WITH RowNumCTE AS (
Select *,
    ROW_NUMBER() OVER(
    PARTITION BY ParcelID,
                 PropertyAddress,
                 SalePrice,
                 SaleDate,
                 LegalReference
                 ORDER BY
                 UniqueID
    )row_num
From SQLDataExploration.dbo.[Nashville Housing Data for Data Cleaning]
--ORDER BY ParcelID
)
--DELETE
SELECT *
FROM RowNumCTE
WHERE row_num > 1
--ORDER BY PropertyAddress

Select *
From SQLDataExploration.dbo.[Nashville Housing Data for Data Cleaning]

--Delete Unused Columns
Select *
From SQLDataExploration.dbo.[Nashville Housing Data for Data Cleaning]

ALTER TABLE SQLDataExploration.dbo.[Nashville Housing Data for Data Cleaning]
DROP COLUMN OwnerAddress, TaxDistrict, PropertyAddress

ALTER TABLE SQLDataExploration.dbo.[Nashville Housing Data for Data Cleaning]
DROP COLUMN SaleDate